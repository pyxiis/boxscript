[tool.poetry]
name = "boxscript"
version = "0.1.0"
description = "BoxScript is a language based on the idea of \"boxes\"."
authors = [
    "Pyxiis <47072520+pyxiis@users.noreply.github.com>",
    "onerandomusername <genericusername414@gmail.com>",
]
license = "MIT"
build = "build.py"

[tool.poetry.dependencies]
python = "^3.9"
numpy = "^1.21.0"

[tool.poetry.dev-dependencies]
black = "^21.7b0"
codecov = "^2.1.3"
coverage = { extras = ["toml"], version = "^5.5" }
flake8 = "^3.9.2"
flake8-annotations = "^2.6.2"
flake8-bandit = "^2.1.2"
flake8-docstrings = "^1.6.0"
flake8-isort = "^4.0.0"
isort = "^5.9.2"
pre-commit = "^2.13.0"
pytest = "~=6.2.4"
pytest-cov = "~=2.12.1"
pytest-xdist = { version = "~=2.3.0", extras = ["psutil"] }
taskipy = "^1.8.1"
Cython = "^0.29.24"

[build-system]
requires = ["poetry-core>=1.0.0", "cython"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
black = { cmd = "black --check .", help = "dry run of black" }
flake8 = { cmd = "python -m flake8", help = "Lints code with flake8" }
lint = { cmd = "pre-commit run --all-files", help = "Checks all files for CI errors" }
precommit = { cmd = "pre-commit install --install-hooks", help = "Installs the precommit hook" }
report = {cmd="coverage report", help= "Show coverage report from previously run tests."}
test = { cmd = "pytest --cov-report= --cov", help = "Runs tests and save results to a coverage report" }
test-nocov = { cmd = "pytest", help = "Runs tests without creating a coverage report" }


[tool.coverage.run]
branch = true
source_pkgs = ["boxscript"]
source = ["tests"]


[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
